#\u8FD9\u4E2A\u6587\u4EF6\u7684\u6570\u636E\u6E90\u914D\u7F6E\u65B9\u9762\u6CA1\u4EC0\u4E48\u7528\uFF0C\u56E0\u4E3A\u6570\u636E\u5E93\u65B9\u9762\u662FDbConfig\u6765\u914D\u7F6E
spring.datasource.url=jdbc:mysql://localhost:3306/kcway2
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5

#Spring\u76F8\u5173\u914D\u7F6E\uFF1A\u6587\u4EF6\u4E0A\u4F20\u914D\u7F6E\uFF0C\u4E0D\u8981\u52A0"
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.http.encoding.charset=UTF-8
spring.http.encoding.enable=true
spring.http.encoding.force=true
spring.mvc.view.suffix=.jsp
spring.mvc.view.prefix=/WEB-INF/

spring.resources.static-locations=classpath:/resources/,classpath:/static/,file:${web.upload-path}

#\u670D\u52A1\u7AEF\u76F8\u5173\u914D\u7F6E\uFF0Csession\u4FDD\u5B58\u65F6\u95F4604800\u4E3A86400*7\u79D2\uFF0C\u53737\u5929
server.port=8092
server.tomcat.uri-encoding=UTF-8
server.servlet.session.timeout=604800

#\u7981\u6B62thymeleaf\u7F13\u5B58\uFF08\u5EFA\u8BAE\uFF1A\u5F00\u53D1\u73AF\u5883\u8BBE\u7F6E\u4E3Afalse\uFF0C\u751F\u6210\u73AF\u5883\u8BBE\u7F6E\u4E3Atrue\uFF09
spring.thymeleaf.cache=false
#java -Dserver.port=8092 -jar kjbtest.war

mybatis.type-aliases-package=com.example.ddbx.transfer.entity
spring.datasource.source1.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.source1.url = jdbc:mysql://localhost:3306/ddbxdb?serverTimezone=GMT%2B8
spring.datasource.source1.username = root
spring.datasource.source1.password = root
#使用Druid数据源
spring.datasource.source1.initialSize=5
# 初始化大小，最小，最大
spring.datasource.source1.minIdle=5
spring.datasource.source1.maxActive= 20
# 配置获取连接等待超时的时间
spring.datasource.source1.maxWait= 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.source1.timeBetweenEvictionRunsMillis= 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.source1.minEvictableIdleTimeMillis= 300000
spring.datasource.source1.validationQuery= select 'x'
spring.datasource.source1.testWhileIdle= true
spring.datasource.source1.testOnBorrow= false
spring.datasource.source1.testOnReturn= false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.source1.poolPreparedStatements= true
spring.datasource.source1.maxPoolPreparedStatementPerConnectionSize= 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.source1.filters= stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.source1.connectionProperties= druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

logging.level.com.example.ddbx.transfer.dao=debug